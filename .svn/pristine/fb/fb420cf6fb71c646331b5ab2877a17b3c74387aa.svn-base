package mapo.work.web;

import java.util.List;

import javax.annotation.Resource;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import egovframework.com.cmm.service.EgovFileMngService;
import egovframework.com.cmm.service.EgovFileMngUtil;
import egovframework.rte.fdl.property.EgovPropertyService;
import mapo.work.service.WorkService;
import mapo.work.service.WorkVO;

@Controller
public class WorkController {

	private final Logger LOGGER = LoggerFactory.getLogger(this.getClass());

	// Service
	@Resource(name = "workService")
	private WorkService workService;

	// 첨부파일 관련
	@Resource(name = "EgovFileMngService")
	private EgovFileMngService fileMngService;

	@Resource(name = "EgovFileMngUtil")
	private EgovFileMngUtil fileUtil;

	/** EgovPropertyService */
	@Resource(name = "propertiesService")
	protected EgovPropertyService propertiesService;

	/**
	 * 업무생성 화면 이동
	 * 
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("mapo/addWork.do")
	public String AddWork(@ModelAttribute("WorkVO") WorkVO workVO, ModelMap model) throws Exception {

		/* 업무구분 조회 */
		workVO.setClCode("TAS"); // 조회할 코드 셋팅

		LOGGER.debug("workVO.getClCode() 1111 =====> ", workVO.getClCode());
		System.out.println(" workVO.getClCode() 2222 ====>  : " + workVO.getClCode());

		List<?> list = workService.selectWorkGubun(workVO);
		model.addAttribute("resultGubun", list);
		
		/* 업무당당자 조회 */
		workVO.setClCode("MAN");
		List<?> managerList = workService.selectWorkGubun(workVO);
		model.addAttribute("resultManager", managerList);
		
		
		/* 시설선택 화면 (트리구조) */
		List<?> list1 = workService.selectDepth1(workVO);
		List<?> list2 = workService.selectDepth2(workVO);
		List<?> list3 = workService.selectDepth3(workVO);
		List<?> list4 = workService.selectDepth4(workVO);
		
		
		model.addAttribute("resultDepth1", list1);
		model.addAttribute("resultDepth2", list2);
		model.addAttribute("resultDepth3", list3);
		model.addAttribute("resultDepth4", list4);

		return "mapo/work/AddWork";
	}
	
	
	/**
	 * 업무입력 저장처리(임시 저장)
	 * @param gthtaskVO
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("mapo/addWorkSave.do")
	@ResponseBody
	public String insertNBoard(@ModelAttribute("WorkVO") WorkVO workVO) throws Exception{
		workVO.setStep("STE010"); // 조회할 코드 셋팅
		System.out.println("------getUrgent--------"+ workVO.getUrgent());
		
		System.out.println("------getItemNo--------"+ workVO.getItemNo());
		System.out.println("------getItemNm--------"+ workVO.getItemNm());
		System.out.println("------getTaskId--------"+ workVO.getTaskId());
		System.out.println("------getItemDetail--------"+ workVO.getItemDetail());
		System.out.println("------getInputYn--------"+ workVO.getInputYn());
		System.out.println("------getTextYn--------"+ workVO.getTextYn());
		
		System.out.println("------제목--------"+ workVO.getTaskNm());
		System.out.println("------내용--------"+ workVO.getTaskContents());
		
		
		int selectMaxTaskId = workService.selectTaskId();
		selectMaxTaskId += 1;
		workVO.setTaskId(selectMaxTaskId); 
		int result = workService.insertItemList(workVO);
		System.out.println("------결과--------"+ result);
//		int result = workService.insertWork(workVO); 
		String msg = "";
		if(result == 1) msg = "ok";
		else msg = "fail";
		return msg;
	}
	
	/**
	 * 업무리스트 조회
	 * 
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("mapo/checkWork.do")
	public String CheckWork(@ModelAttribute("WorkVO") WorkVO workVO, ModelMap model) throws Exception {
		/*
		 * 검색
		 */
		
		/* 검색: 진행상태 */
		workVO.setClCode("STE");
		List<?> stepList = workService.selectWorkGubun(workVO);
		model.addAttribute("resultStep", stepList);
		
		/* 검색: 업무구분 */
		workVO.setClCode("TAS");
		List<?> gubunList = workService.selectWorkGubun(workVO);
		model.addAttribute("resultGubun", gubunList);
		
		/* 검색: 담당자 */
		workVO.setClCode("MAN");
		List<?> managerList = workService.selectWorkGubun(workVO);
		model.addAttribute("resultManager", managerList);
		
		/* 검색: 기관 대분류 */
		List<?> lcList = workService.selectDepth1(workVO);
		model.addAttribute("resultLc", lcList);
		
		/* 검색: 기관 중분류 */
		List<?> mcList = workService.selectDepth2(workVO);
		model.addAttribute("resultMc", mcList);
		
		/* 검색: 기관 소분류 */
		List<?> scList = workService.selectDepth3(workVO);
		model.addAttribute("resultSc", scList);
			

		/*
		 * 업무 리스트
		 */
		int total = workService.selectWorkTotal(workVO);
			
		List<?> worklist = workService.selectWorkList(workVO);
		System.out.println("업무리스트 조회: "+ worklist);
		
		
		model.addAttribute("resultWorkList", worklist);
		model.addAttribute("workTotal", total);
		return "mapo/work/CheckWork";
	}

	

}
